* JULIAN'S SITE
** PROFILE
** REGISTER
*** FEATURES
**** NEXT Failure to register should go to the Snackbar or an error above the form (that seem slike the standar)
***** 1. Find the register errors from the server
***** 2. Address them here.
***** NEXT Steal alert from mismatched emails
** BOOK 
*** CSS
**** TODO Give title more room
**** TODO Button stuck to bottom of the papier
*** FEATURES
**** DONE IMPLEMENT ERROR in Book
**** WAIT booking confirmed component
***** DONE Receipt.tsx
****** TODO make receipt pretty
**** TODO Show times in user's local time, POST them in UTC. 
**** DONE Only shows free consult to non-logged in and non-approved.
  harder than it seemed
**** DONE actually make it book
* LOW PRIORITY
** TODO Sessions (server?)
** TODO Re-figure out the payment system lmao
** TODO animate route transitions
  https://www.youtube.com/watch?v=sIm1ApP5YH8  
* UNASSIGNED
* FINISHED
** Login
*** Snackbar waiting Room
**** DONE Respond to Login Failure in UI!
**** DONE Respond to login success in UI!
** DONE Free consult component for book  
** DONE handle error states from  /user/login

** DONE  Form to make reservations:
*** DONE Need a calendar component.
*** DONE Once a day is chosen, then we make a call to the calendar with the chosen date
*** DONE Then the user chooses a time (shown in buttons, localized for them) and then we send a POST appointments API call
** DONE TEST SYSTEMS
*** DONE write redux logic for calendar-component and the POST route "/appointments/ondate/"
*** DONE write component that displays the timeslot logic
**** DONE write constant file with both timeslot number and a date object specifying the time. (lets do 2pm to 5pm)
*** DONE write redux logic for login component and the POST route "/user/login"  console.log(date)
*** DONE  write redux logic for register component and the POST route "/user/create"
** DONE NEW COMPONENTS
*** DONE Snackbar component, visible in every part of the app.
**** DONE Snackbar actions
  state.ui.snackbar
*** DONE Profile component
**** DONE Greeting Part
**** DONE Order List component
**** DONE OrderListMember Component
*** DONE Make error read off of state.ui.error, and if nothing is there, just give a generic one
** SERVICES
*** DONE write code to only show the yoga/energy if you've been approved
**** DONE Otherwise only show consult.
** CALENDAR
*** DONE make "book" button only show up when you have selected both a data and a time.
** TODO Moderator Profile Component
*** TODO User List Component
**** TODO User Component
  + Approve this user button
  + Order List
  + Email
*** DONE Move OrderList to DataGrid
  https://mui.com/components/data-grid/
*** CSS
**** DONE Make register into a square rather than a column! Use the mui stack component
